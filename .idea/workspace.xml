<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="bc4da88f-8032-4df4-9bcc-9ca8b4f364d2" name="Changes" comment="change project name. fix websocket support for logs">
      <change afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/models/common.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/models/place_holder_repository.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/models/project_public.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/models/repository_public.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/models/robot_created.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/models/robot_public.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/models/webhook_public.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/376ab1f3-e94f-40d1-bcc1-94f520ddc6e7/storage_v2/_src_/database/terraform_backend.KWhKhQ.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/376ab1f3-e94f-40d1-bcc1-94f520ddc6e7/storage_v2/_src_/database/terraform_backend.KWhKhQ/schema/information_schema.FNRwLQ.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/376ab1f3-e94f-40d1-bcc1-94f520ddc6e7/storage_v2/_src_/database/terraform_backend.KWhKhQ/schema/information_schema.FNRwLQ.zip" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/376ab1f3-e94f-40d1-bcc1-94f520ddc6e7/storage_v2/_src_/database/terraform_backend.KWhKhQ/schema/pg_catalog.0S1ZNQ.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/376ab1f3-e94f-40d1-bcc1-94f520ddc6e7/storage_v2/_src_/database/terraform_backend.KWhKhQ/schema/pg_catalog.0S1ZNQ.zip" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/376ab1f3-e94f-40d1-bcc1-94f520ddc6e7/storage_v2/_src_/database/terraform_backend.KWhKhQ/schema/public.abK9xQ.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/376ab1f3-e94f-40d1-bcc1-94f520ddc6e7/storage_v2/_src_/database/terraform_backend.KWhKhQ/schema/terraform_remote_state.46am2Q.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/go-deploy.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/go-deploy.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/models/deployment.go" beforeDir="false" afterPath="$PROJECT_DIR$/models/deployment.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/models/dto/harbor_webhook.go" beforeDir="false" afterPath="$PROJECT_DIR$/models/dto/harbor_webhook.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/models/models.go" beforeDir="false" afterPath="$PROJECT_DIR$/models/models.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/deployment_worker/confirmers.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/deployment_worker/confirmers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/deployment_worker/status_worker.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/deployment_worker/status_worker.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/deployment_worker/subsystems.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/deployment_worker/subsystems.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/common.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/common.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/harbor.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/harbor.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/models/ApiError.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/models/api_error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/models/PlaceHolderRepository.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/models/ProjectCreateReq.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/models/project_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/models/RobotCreateReq.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/models/robot_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/project.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/project.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/robot.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/robot.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/utils.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/utils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/harbor/webhook.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/harbor/webhook.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/npm/models/proxy_host_public.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/npm/models/proxy_host_public.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/subsystems/npm/proxy_host.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/subsystems/npm/proxy_host.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/deployment_service/deployment_ci_config_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/deployment_service/deployment_ci_config_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/deployment_service/deployment_hook_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/deployment_service/deployment_hook_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/subsystem_service/harbor_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/subsystem_service/harbor_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/subsystem_service/k8s_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/subsystem_service/k8s_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/subsystem_service/npm_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/subsystem_service/npm_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/terraform/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/terraform/subsystems/npm/npm_vars.tf" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="false" />
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.19.3" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="false" />
  </component>
  <component name="ProjectId" id="2I0qR5gQZmWR5D9aWwCX3p7JDhA" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/repos/work/go-deploy&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;goland.project.structure&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\repos\work\go-deploy\pkg\subsystems\cs" />
      <recent name="C:\repos\deploy-api-go\pkg\auth" />
      <recent name="C:\repos\deploy-api-go\pkg\validator" />
      <recent name="C:\repos\deploy-api-go" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\repos\work\go-deploy" />
      <recent name="C:\repos\go-deploy\terraform" />
      <recent name="C:\repos\go-deploy\pkg\terraform\subsystems\cs" />
      <recent name="C:\repos\go-deploy\pkg\subsystems\pfsense" />
      <recent name="C:\repos\go-deploy\pkg\worker" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="Run" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-deploy" />
      <working_directory value="$PROJECT_DIR$" />
      <envs>
        <env name="DEPLOY_ENV_FILE" value="$PROJECT_DIR$/../admin/secrets/deploy/kthcloud.env" />
      </envs>
      <kind value="PACKAGE" />
      <package value="go-deploy" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-deploy" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="deploy-k8s-worker" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="go-deploy" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="deploy-k8s-worker" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="dev" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="fix bugs in user/projects delete route. fix error codes" />
    <MESSAGE value="fix harbor projects being private on creation" />
    <MESSAGE value="change project name. fix websocket support for logs" />
    <option name="LAST_COMMIT_MESSAGE" value="change project name. fix websocket support for logs" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$USER_HOME$/go/pkg/mod/github.com/mittwald/goharbor-client/v5@v5.1.0/apiv2/pkg/clients/robotv1/robotv1.go</url>
          <line>91</line>
          <option name="timeStamp" value="32" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="DlvErrorBreakpoint" />
      </default-breakpoints>
    </breakpoint-manager>
  </component>
</project>