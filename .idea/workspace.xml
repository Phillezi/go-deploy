<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="bc4da88f-8032-4df4-9bcc-9ca8b4f364d2" name="Changes" comment="change project name. fix websocket support for logs">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/deployment_service/internal_service/npm_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/deployment_service/internal_service/npm_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/vm_service/vm_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/vm_service/vm_service.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="false" />
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="false" />
  </component>
  <component name="ProjectId" id="2I0qR5gQZmWR5D9aWwCX3p7JDhA" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/ownem&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;goland.project.structure&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\repos\work\go-deploy\models\dto" />
      <recent name="C:\repos\work\go-deploy\service\vm_service" />
      <recent name="$PROJECT_DIR$/pkg/subsystems/k8s/models" />
      <recent name="$PROJECT_DIR$/pkg/vm_worker" />
      <recent name="$PROJECT_DIR$/models/dto" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\repos\work\go-deploy\pkg\subsystems\cs\commands" />
      <recent name="C:\repos\work\go-deploy\service\deployment_service\internal" />
      <recent name="C:\repos\work\go-deploy\service\vm_service\internal" />
      <recent name="$PROJECT_DIR$/pkg/subsystems/k8s" />
      <recent name="$PROJECT_DIR$/routers/api/v1/v1vms" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.Run">
    <configuration name="Run" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-deploy" />
      <working_directory value="$PROJECT_DIR$" />
      <envs>
        <env name="DEPLOY_ENV_FILE" value="$PROJECT_DIR$/../admin/secrets/deploy/kthcloud.env" />
      </envs>
      <kind value="PACKAGE" />
      <package value="go-deploy" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-deploy" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="deploy-k8s-worker" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="Run Test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true">
      <module name="go-deploy" />
      <working_directory value="$PROJECT_DIR$/test" />
      <envs>
        <env name="DEPLOY_ENV_FILE" value="$PROJECT_DIR$/../admin/secrets/deploy/kthcloud.env" />
      </envs>
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-deploy/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="TestCreateBadK8s in go-deploy/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-deploy" />
      <working_directory value="$PROJECT_DIR$/test" />
      <envs>
        <env name="DEPLOY_ENV_FILE" value="$PROJECT_DIR$/../admin/secrets/deploy/kthcloud.env" />
      </envs>
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-deploy/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCreateBadK8s\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUpdateVM in go-deploy/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-deploy" />
      <working_directory value="$PROJECT_DIR$/test" />
      <envs>
        <env name="DEPLOY_ENV_FILE" value="$PROJECT_DIR$/../admin/secrets/deploy/kthcloud.env" />
      </envs>
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-deploy/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUpdateVM\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="go-deploy" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="deploy-k8s-worker" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.Run" />
      <item itemvalue="Go Test.TestCreateBadK8s in go-deploy/test" />
      <item itemvalue="Go Test.TestUpdateVM in go-deploy/test" />
      <item itemvalue="Go Test.Run Test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestCreateBadK8s in go-deploy/test" />
        <item itemvalue="Go Test.Run Test" />
        <item itemvalue="Go Test.TestUpdateVM in go-deploy/test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="dev" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="fix bugs in user/projects delete route. fix error codes" />
    <MESSAGE value="fix harbor projects being private on creation" />
    <MESSAGE value="change project name. fix websocket support for logs" />
    <option name="LAST_COMMIT_MESSAGE" value="change project name. fix websocket support for logs" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <default-breakpoints>
        <breakpoint type="DlvErrorBreakpoint" />
      </default-breakpoints>
    </breakpoint-manager>
  </component>
</project>