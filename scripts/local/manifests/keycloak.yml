---
apiVersion: v1
kind: Namespace
metadata:
  name: keycloak
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-keycloak-db
  namespace: keycloak
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-db
  namespace: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak-db
    spec:
      containers:
        - name: keycloak-db
          image: postgres:15.6
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_DB
              value: keycloak
            - name: POSTGRES_USER
              value: keycloak
            - name: POSTGRES_PASSWORD
              value: keycloak
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: vol-keycloak-db
      volumes:
        - name: vol-keycloak-db
          persistentVolumeClaim:
            claimName: pvc-keycloak-db
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: keycloak
  namespace: keycloak
spec: 
  selector: 
    matchLabels: 
      app.kubernetes.io/name: keycloak
  replicas: 1
  strategy: 
    type: RollingUpdate
    rollingUpdate: 
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template: 
    metadata: 
      labels: 
        app.kubernetes.io/name: keycloak
    spec: 
      containers: 
        - name: keycloak
          image: quay.io/keycloak/keycloak:24.0.1
          args: 
            - start-dev
          imagePullPolicy: Always
          env: 
            # Keycloak configuration
            - name: KEYCLOAK_ADMIN
              value: admin

            - name: KEYCLOAK_ADMIN_PASSWORD
              value: admin

            - name: KC_PROXY
              value: edge

            - name: KC_HOSTNAME_URL
              value: http://keycloak.deploy.localhost:${keycloak_port}

            - name: KC_HTTP_ENABLED
              value: "true"

            - name: KC_HEALTH_ENABLED
              value: "true"

            # Database configuration
            - name: KC_DB
              value: postgres

            - name: KC_DB_URL_HOST
              value: keycloak-db

            - name: KC_DB_URL_PORT
              value: "5432"

            - name: KC_DB_URL_DATABASE
              value: keycloak

            - name: KC_DB_USERNAME
              value: keycloak

            - name: KC_DB_PASSWORD
              value: keycloak
          ports: 
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          readinessProbe:
              httpGet:
                path: /realms/master
                port: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: keycloak-db
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak-db
spec:
  ports:
    - name: postgres-port
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app.kubernetes.io/name: keycloak-db
---
apiVersion: v1
kind: Service
metadata: 
  name: keycloak
  namespace: keycloak
  labels: 
    app.kubernetes.io/name: keycloak
spec:
  type: NodePort
  ports: 
    - port: 8080
      targetPort: 8080
      nodePort: ${keycloak_port}
  selector: 
    app.kubernetes.io/name: keycloak
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: keycloak
  namespace: keycloak
spec:
  ingressClassName: nginx
  rules:
    - host: keycloak.deploy.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8080