package helpers

import (
	"fmt"
	"go-deploy/models/sys/enviroment"
	csModels "go-deploy/pkg/subsystems/cs/models"
	"go-deploy/utils/subsystemutils"
	"time"
)

func CreateServiceOfferingPublic(name string, cpuCores, ram, diskSize int) *csModels.ServiceOfferingPublic {
	return &csModels.ServiceOfferingPublic{
		Name:        subsystemutils.GetPrefixedName(name),
		Description: fmt.Sprintf("Auto-generated by deploy for vm %s", name),
		CpuCores:    cpuCores,
		RAM:         ram,
		DiskSize:    diskSize,
	}
}

func CreateCsVmPublic(name, serviceOfferingID, templateID string, tags []csModels.Tag) *csModels.VmPublic {
	return &csModels.VmPublic{
		Name:              name,
		ServiceOfferingID: serviceOfferingID,
		TemplateID:        templateID,
		ExtraConfig:       "",
		Tags:              tags,
	}
}

func CreatePortForwardingRulePublic(name, csVmID, networkID, ipAddressID string, port int, protocol string, tags []csModels.Tag) *csModels.PortForwardingRulePublic {
	return &csModels.PortForwardingRulePublic{
		Name:        name,
		CreatedAt:   time.Time{},
		VmID:        csVmID,
		NetworkID:   networkID,
		IpAddressID: ipAddressID,
		PublicPort:  port,
		PrivatePort: port,
		Protocol:    protocol,
		Tags:        tags,
	}
}

func CreateRootPortForwardingRulePublic(name, csVmID string, publicPort, privatePort int, protocol string, tags []csModels.Tag, zone enviroment.VmZone) *csModels.PortForwardingRulePublic {
	return &csModels.PortForwardingRulePublic{
		Name:        name,
		VmID:        csVmID,
		NetworkID:   zone.NetworkID,
		IpAddressID: zone.IpAddressID,
		PublicPort:  publicPort,
		PrivatePort: privatePort,
		Protocol:    protocol,
		Tags:        tags,
	}
}
