openapi: 3.0.1
info:
  title: go-deploy API
  description: This is the API explorer for the go-deploy API. You can use it as a
    reference for the API endpoints.
  termsOfService: http://swagger.io/terms/
  contact:
    name: Support
    url: https://github.com/kthcloud/go-deploy
  license:
    name: MIT License
    url: https://github.com/kthcloud/go-deploy?tab=MIT-1-ov-file#readme
  version: "1.0"
servers:
- url: /
paths:
  /v2/gpuGroups:
    get:
      tags:
      - GpuGroup
      summary: List GPU groups
      description: List GPU groups
      parameters:
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Number of items per page
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/body.GpuGroupRead'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "423":
          description: Locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
  /v2/gpuGroups/{gpuGroupId}:
    get:
      tags:
      - GpuGroup
      summary: Get GPU group
      description: Get GPU group
      parameters:
      - name: gpuGroupId
        in: path
        description: GPU group ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body.GpuGroupRead'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "423":
          description: Locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
  /v2/gpuLeases:
    get:
      tags:
      - GpuLease
      summary: List GPU leases
      description: List GPU leases
      parameters:
      - name: all
        in: query
        description: List all
        schema:
          type: boolean
      - name: vmId
        in: query
        description: Filter by VM ID
        schema:
          type: string
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Number of items per page
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/body.GpuLeaseRead'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "423":
          description: Locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - GpuLease
      summary: Create GPU Lease
      description: Create GPU lease
      requestBody:
        description: GPU lease
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body.GpuLeaseCreate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body.GpuLeaseCreated'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v2/gpuLeases/{gpuLeaseId}:
    get:
      tags:
      - GpuLease
      summary: Get GPU lease
      description: Get GPU lease
      parameters:
      - name: gpuLeaseId
        in: path
        description: GPU lease ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body.GpuLeaseRead'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "423":
          description: Locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - GpuLease
      summary: Update GPU lease
      description: Update GPU lease
      parameters:
      - name: gpuLeaseId
        in: path
        description: GPU lease ID
        required: true
        schema:
          type: string
      requestBody:
        description: GPU lease
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body.GpuLeaseUpdate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body.GpuLeaseUpdated'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - GpuLease
      summary: Delete GPU lease
      description: Delete GPU lease
      parameters:
      - name: gpuLeaseId
        in: path
        description: GPU lease ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body.GpuLeaseDeleted'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
  /v2/snapshots:
    get:
      tags:
      - Snapshot
      summary: List snapshots
      description: List snapshots
      parameters:
      - name: vmId
        in: path
        description: Filter by VM ID
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Number of items per page
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/go-deploy_dto_v2_body.VmSnapshotRead'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "423":
          description: Locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - Snapshot
      summary: Create snapshot
      description: Create snapshot
      parameters:
      - name: vmId
        in: path
        description: VM ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/go-deploy_dto_v2_body.VmSnapshotCreated'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
  /v2/vmActions:
    post:
      tags:
      - VmAction
      summary: Creates a new action
      description: Creates a new action
      parameters:
      - name: vmId
        in: path
        description: VM ID
        required: true
        schema:
          type: string
      requestBody:
        description: actions body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body.VmActionCreate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body.VmActionCreated'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v2/vms:
    get:
      tags:
      - VM
      summary: List VMs
      description: List VMs
      parameters:
      - name: all
        in: query
        description: List all
        schema:
          type: boolean
      - name: userId
        in: query
        description: Filter by user ID
        schema:
          type: string
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Number of items per page
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/go-deploy_dto_v2_body.VmRead'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - VM
      summary: Create VM
      description: Create VM
      requestBody:
        description: VM body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/go-deploy_dto_v2_body.VmCreate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/go-deploy_dto_v2_body.VmCreated'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v2/vms/{vmId}:
    get:
      tags:
      - VM
      summary: Get VM
      description: Get VM
      parameters:
      - name: vmId
        in: path
        description: VM ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/go-deploy_dto_v2_body.VmRead'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - VM
      summary: Update VM
      description: Update VM
      parameters:
      - name: vmId
        in: path
        description: VM ID
        required: true
        schema:
          type: string
      requestBody:
        description: VM update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/go-deploy_dto_v2_body.VmUpdate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/go-deploy_dto_v2_body.VmUpdated'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - VM
      summary: Delete VM
      description: Delete VM
      parameters:
      - name: vmId
        in: path
        description: VM ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/go-deploy_dto_v2_body.VmDeleted'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
  /v2/vms/{vmId}/snapshot/{snapshotId}:
    post:
      tags:
      - Snapshot
      summary: Get snapshot
      description: Get snapshot
      parameters:
      - name: vmId
        in: path
        description: VM ID
        required: true
        schema:
          type: string
      - name: snapshotId
        in: path
        description: Snapshot ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/go-deploy_dto_v2_body.VmSnapshotRead'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
    delete:
      tags:
      - Snapshot
      summary: Delete snapshot
      description: Delete snapshot
      parameters:
      - name: vmId
        in: path
        description: VM ID
        required: true
        schema:
          type: string
      - name: snapshotId
        in: path
        description: Snapshot ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/go-deploy_dto_v2_body.VmSnapshotDeleted'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sys.ErrorResponse'
      security:
      - ApiKeyAuth: []
components:
  schemas:
    body.CustomDomainRead:
      type: object
      properties:
        domain:
          type: string
        secret:
          type: string
        status:
          type: string
        url:
          type: string
    body.GpuGroupRead:
      type: object
      properties:
        available:
          type: integer
        displayName:
          type: string
        id:
          type: string
        name:
          type: string
        total:
          type: integer
        vendor:
          type: string
        zone:
          type: string
    body.GpuLeaseCreate:
      required:
      - gpuGroupId
      type: object
      properties:
        gpuGroupId:
          type: string
          description: |-
            GpuGroupID is used to specify the GPU to lease.
            As such, the lease does not specify which specific GPU to lease, but rather the type of GPU to lease.
        leaseForever:
          type: boolean
          description: LeaseForever is used to specify whether the lease should be
            created forever.
    body.GpuLeaseCreated:
      type: object
      properties:
        id:
          type: string
        jobId:
          type: string
    body.GpuLeaseDeleted:
      type: object
      properties:
        id:
          type: string
        jobId:
          type: string
    body.GpuLeaseRead:
      type: object
      properties:
        activatedAt:
          type: string
          description: |-
            ActivatedAt specifies the time when the lease was activated. This is the time the user first attached the GPU
            or 1 day after the lease was created if the user did not attach the GPU.
        active:
          type: boolean
        assignedAt:
          type: string
          description: AssignedAt specifies the time when the lease was assigned to
            the user.
        createdAt:
          type: string
        expiredAt:
          type: string
        expiresAt:
          type: string
          description: |-
            ExpiresAt specifies the time when the lease will expire.
            This is only present if the lease is active.
        gpuGroupId:
          type: string
        id:
          type: string
        leaseDuration:
          type: number
        queuePosition:
          type: integer
        userId:
          type: string
        vmId:
          type: string
          description: VmID is set when the lease is attached to a VM.
    body.GpuLeaseUpdate:
      type: object
      properties:
        vmId:
          type: string
          description: |-
            VmID is used to specify the VM to attach the lease to.

            - If specified, the lease will be attached to the VM.

            - If the lease is already attached to a VM, it will be detached from the current VM and attached to the new VM.

            - If the lease is not active, specifying a VM will activate the lease.

            - If the lease is not assigned, an error will be returned.
    body.GpuLeaseUpdated:
      type: object
      properties:
        id:
          type: string
        jobId:
          type: string
    body.VmActionCreate:
      required:
      - action
      type: object
      properties:
        action:
          type: string
          enum:
          - start
          - stop
          - restart
          - repair
    body.VmActionCreated:
      type: object
      properties:
        id:
          type: string
        jobId:
          type: string
    go-deploy_dto_v2_body.HttpProxyCreate:
      required:
      - name
      type: object
      properties:
        customDomain:
          type: string
          description: |-
            CustomDomain is the domain that the deployment will be available on.
            The max length is set to 243 to allow for a sub domain when confirming the domain.
        name:
          maxLength: 30
          minLength: 3
          type: string
    go-deploy_dto_v2_body.HttpProxyRead:
      required:
      - name
      type: object
      properties:
        customDomain:
          $ref: '#/components/schemas/body.CustomDomainRead'
        name:
          maxLength: 30
          minLength: 3
          type: string
        url:
          type: string
    go-deploy_dto_v2_body.HttpProxyUpdate:
      required:
      - name
      type: object
      properties:
        customDomain:
          type: string
          description: |-
            CustomDomain is the domain that the deployment will be available on.
            The max length is set to 243 to allow for a sub domain when confirming the domain.
        name:
          maxLength: 30
          minLength: 3
          type: string
    go-deploy_dto_v2_body.PortCreate:
      required:
      - name
      - port
      - protocol
      type: object
      properties:
        httpProxy:
          $ref: '#/components/schemas/go-deploy_dto_v2_body.HttpProxyCreate'
        name:
          maxLength: 100
          minLength: 1
          type: string
        port:
          maximum: 65535
          minimum: 1
          type: integer
        protocol:
          type: string
          enum:
          - tcp
          - udp
    go-deploy_dto_v2_body.PortRead:
      type: object
      properties:
        externalPort:
          type: integer
        httpProxy:
          $ref: '#/components/schemas/go-deploy_dto_v2_body.HttpProxyRead'
        name:
          type: string
        port:
          type: integer
        protocol:
          type: string
    go-deploy_dto_v2_body.PortUpdate:
      required:
      - name
      - port
      - protocol
      type: object
      properties:
        httpProxy:
          $ref: '#/components/schemas/go-deploy_dto_v2_body.HttpProxyUpdate'
        name:
          maxLength: 100
          minLength: 1
          type: string
        port:
          maximum: 65535
          minimum: 1
          type: integer
        protocol:
          type: string
          enum:
          - tcp
          - udp
    go-deploy_dto_v2_body.Specs:
      type: object
      properties:
        cpuCores:
          type: integer
        diskSize:
          type: integer
        ram:
          type: integer
    go-deploy_dto_v2_body.VmCreate:
      required:
      - cpuCores
      - diskSize
      - name
      - ram
      - sshPublicKey
      type: object
      properties:
        cpuCores:
          minimum: 1
          type: integer
        diskSize:
          minimum: 10
          type: integer
        name:
          maxLength: 30
          minLength: 3
          type: string
        ports:
          maxItems: 10
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/go-deploy_dto_v2_body.PortCreate'
        ram:
          minimum: 1
          type: integer
        sshPublicKey:
          type: string
        zone:
          type: string
    go-deploy_dto_v2_body.VmCreated:
      type: object
      properties:
        id:
          type: string
        jobId:
          type: string
    go-deploy_dto_v2_body.VmDeleted:
      type: object
      properties:
        id:
          type: string
        jobId:
          type: string
    go-deploy_dto_v2_body.VmGpuLease:
      type: object
      properties:
        activatedAt:
          type: string
          description: |-
            ActivatedAt specifies the time when the lease was activated. This is the time the user first attached the GPU
            or 1 day after the lease was created if the user did not attach the GPU.
        assignedAt:
          type: string
          description: AssignedAt specifies the time when the lease was assigned to
            the user.
        createdAt:
          type: string
        expiredAt:
          type: string
          description: |-
            ExpiredAt specifies the time when the lease expired.
            This is only present if the lease is expired.
        expiresAt:
          type: string
          description: |-
            ExpiresAt specifies the time when the lease will expire.
            This is only present if the lease is active.
        gpuGroupId:
          type: string
        id:
          type: string
        leaseDuration:
          type: number
    go-deploy_dto_v2_body.VmRead:
      type: object
      properties:
        createdAt:
          type: string
        gpu:
          $ref: '#/components/schemas/go-deploy_dto_v2_body.VmGpuLease'
        host:
          type: string
        id:
          type: string
        internalName:
          type: string
        name:
          type: string
        ownerId:
          type: string
        ports:
          type: array
          items:
            $ref: '#/components/schemas/go-deploy_dto_v2_body.PortRead'
        repairedAt:
          type: string
        specs:
          $ref: '#/components/schemas/go-deploy_dto_v2_body.Specs'
        sshConnectionString:
          type: string
        sshPublicKey:
          type: string
        status:
          type: string
        teams:
          type: array
          items:
            type: string
        updatedAt:
          type: string
        zone:
          type: string
    go-deploy_dto_v2_body.VmSnapshotCreated:
      type: object
      properties:
        id:
          type: string
        jobId:
          type: string
    go-deploy_dto_v2_body.VmSnapshotDeleted:
      type: object
      properties:
        id:
          type: string
        jobId:
          type: string
    go-deploy_dto_v2_body.VmSnapshotRead:
      type: object
      properties:
        created:
          type: string
        id:
          type: string
        name:
          type: string
        status:
          type: string
    go-deploy_dto_v2_body.VmUpdate:
      type: object
      properties:
        cpuCores:
          minimum: 1
          type: integer
        name:
          maxLength: 30
          minLength: 3
          type: string
          description: |-
            Name is used to rename a VM.
            If specified, only name will be updated.
        ownerId:
          type: string
          description: |-
            OwnerID is used to initiate transfer a VM to another user.
            If specified, only the transfer will happen.
            If specified but empty, the transfer will be canceled.
        ports:
          maxItems: 10
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/go-deploy_dto_v2_body.PortUpdate'
        ram:
          minimum: 1
          type: integer
    go-deploy_dto_v2_body.VmUpdated:
      type: object
      properties:
        id:
          type: string
        jobId:
          type: string
    sys.Error:
      type: object
      properties:
        code:
          type: string
        msg:
          type: string
    sys.ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/sys.Error'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-Api-Key
      in: header
x-original-swagger-version: "2.0"
