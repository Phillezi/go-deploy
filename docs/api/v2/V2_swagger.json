{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v2/gpuGroups": {
            "get": {
                "description": "List GPU groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GpuGroup"
                ],
                "summary": "List GPU groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.GpuGroupRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/gpuGroups/{gpuGroupId}": {
            "get": {
                "description": "Get GPU group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GpuGroup"
                ],
                "summary": "Get GPU group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "GPU group ID",
                        "name": "gpuGroupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.GpuGroupRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/gpuLeases": {
            "get": {
                "description": "List GPU leases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GpuLease"
                ],
                "summary": "List GPU leases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.GpuLeaseRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create GPU lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GpuLease"
                ],
                "summary": "Create GPU Lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "GPU lease",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.GpuLeaseCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.GpuLeaseRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/gpuLeases/{gpuLeaseId}": {
            "get": {
                "description": "Get GPU lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GpuLease"
                ],
                "summary": "Get GPU lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "GPU lease ID",
                        "name": "gpuLeaseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.GpuLeaseRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Update GPU lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GpuLease"
                ],
                "summary": "Update GPU lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "GPU lease ID",
                        "name": "gpuLeaseId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GPU lease",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.GpuLeaseUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.GpuLeaseRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete GPU lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GpuLease"
                ],
                "summary": "Delete GPU lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "GPU lease ID",
                        "name": "gpuLeaseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.GpuLeaseRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vm": {
            "get": {
                "description": "GetVM list of VMs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "GetVM list of VMs",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "GetVM all",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user id",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/go-deploy_dto_v2_body.VmRead"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "CreateVM VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "CreateVM VM",
                "parameters": [
                    {
                        "description": "VM body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v2_body.VmCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v2_body.VmCreated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vm/{vmId}": {
            "get": {
                "description": "GetVM VM by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "GetVM VM by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v2_body.VmRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Updates a VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "Updates a VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VM update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v2_body.VmUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v2_body.VmUpdated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "Delete VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v2_body.VmDeleted"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vms/{vmId}/command": {
            "post": {
                "description": "Creates a new action",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "Creates a new action",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Command body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.VmActionCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.VmActionCreated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vms/{vmId}/snapshot/{snapshotId}": {
            "post": {
                "description": "GetVM snapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snapshot"
                ],
                "summary": "GetVM snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Snapshot ID",
                        "name": "snapshotId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v2_body.VmSnapshotRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete snapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snapshot"
                ],
                "summary": "Delete snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Snapshot ID",
                        "name": "snapshotId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v2_body.VmSnapshotRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vms/{vmId}/snapshots": {
            "get": {
                "description": "GetVM snapshot list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snapshot"
                ],
                "summary": "GetVM snapshot list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/go-deploy_dto_v2_body.VmSnapshotRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "CreateVM snapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snapshot"
                ],
                "summary": "CreateVM snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v2_body.VmSnapshotRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "body.CustomDomainRead": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "body.GpuGroupRead": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "integer"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "vendor": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "body.GpuLeaseCreate": {
            "type": "object",
            "required": [
                "gpuGroupId"
            ],
            "properties": {
                "gpuGroupId": {
                    "description": "GpuGroupID is used to specify the GPU to lease.\nAs such, the lease does not specify which specific GPU to lease, but rather the type of GPU to lease.",
                    "type": "string"
                },
                "leaseForever": {
                    "description": "LeaseForever is used to specify whether the lease should be created forever.",
                    "type": "boolean"
                }
            }
        },
        "body.GpuLeaseRead": {
            "type": "object",
            "properties": {
                "activatedAt": {
                    "description": "ActivatedAt specifies the time when the lease was activated. This is the time the user first attached the GPU\nor 1 day after the lease was created if the user did not attach the GPU.",
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "assignedAt": {
                    "description": "AssignedAt specifies the time when the lease was assigned to the user.",
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "expiredAt": {
                    "type": "string"
                },
                "expiresAt": {
                    "description": "ExpiresAt specifies the time when the lease will expire.\nThis is only present if the lease is active.",
                    "type": "string"
                },
                "gpuGroupId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "leaseDuration": {
                    "type": "number"
                },
                "queuePosition": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "vmId": {
                    "description": "VmID is set when the lease is attached to a VM.",
                    "type": "string"
                }
            }
        },
        "body.GpuLeaseUpdate": {
            "type": "object",
            "properties": {
                "vmId": {
                    "description": "VmID is used to specify the VM to attach the lease to.\n\n- If specified, the lease will be attached to the VM.\n\n- If the lease is already attached to a VM, it will be detached from the current VM and attached to the new VM.\n\n- If the lease is not active, specifying a VM will activate the lease.\n\n- If the lease is not assigned, an error will be returned.",
                    "type": "string"
                }
            }
        },
        "body.VmActionCreate": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "start",
                        "stop",
                        "restart",
                        "repair"
                    ]
                }
            }
        },
        "body.VmActionCreated": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v2_body.HttpProxyCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "customDomain": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                }
            }
        },
        "go-deploy_dto_v2_body.HttpProxyRead": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "customDomain": {
                    "$ref": "#/definitions/body.CustomDomainRead"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v2_body.HttpProxyUpdate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "customDomain": {
                    "type": "string",
                    "maxLength": 100
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                }
            }
        },
        "go-deploy_dto_v2_body.PortCreate": {
            "type": "object",
            "required": [
                "name",
                "port",
                "protocol"
            ],
            "properties": {
                "httpProxy": {
                    "$ref": "#/definitions/go-deploy_dto_v2_body.HttpProxyCreate"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "tcp",
                        "udp"
                    ]
                }
            }
        },
        "go-deploy_dto_v2_body.PortRead": {
            "type": "object",
            "properties": {
                "externalPort": {
                    "type": "integer"
                },
                "httpProxy": {
                    "$ref": "#/definitions/go-deploy_dto_v2_body.HttpProxyRead"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v2_body.PortUpdate": {
            "type": "object",
            "required": [
                "name",
                "port",
                "protocol"
            ],
            "properties": {
                "httpProxy": {
                    "$ref": "#/definitions/go-deploy_dto_v2_body.HttpProxyUpdate"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "tcp",
                        "udp"
                    ]
                }
            }
        },
        "go-deploy_dto_v2_body.Specs": {
            "type": "object",
            "properties": {
                "cpuCores": {
                    "type": "integer"
                },
                "diskSize": {
                    "type": "integer"
                },
                "ram": {
                    "type": "integer"
                }
            }
        },
        "go-deploy_dto_v2_body.VmCreate": {
            "type": "object",
            "required": [
                "cpuCores",
                "diskSize",
                "name",
                "ram",
                "sshPublicKey"
            ],
            "properties": {
                "cpuCores": {
                    "type": "integer",
                    "minimum": 2
                },
                "diskSize": {
                    "type": "integer",
                    "minimum": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "ports": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/go-deploy_dto_v2_body.PortCreate"
                    }
                },
                "ram": {
                    "type": "integer",
                    "minimum": 1
                },
                "sshPublicKey": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v2_body.VmCreated": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v2_body.VmDeleted": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v2_body.VmGpuLease": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "string"
                },
                "gpuGroupId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isExpired": {
                    "type": "boolean"
                }
            }
        },
        "go-deploy_dto_v2_body.VmRead": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "gpu": {
                    "$ref": "#/definitions/go-deploy_dto_v2_body.VmGpuLease"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/go-deploy_dto_v2_body.PortRead"
                    }
                },
                "repairedAt": {
                    "type": "string"
                },
                "specs": {
                    "$ref": "#/definitions/go-deploy_dto_v2_body.Specs"
                },
                "sshConnectionString": {
                    "type": "string"
                },
                "sshPublicKey": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v2_body.VmSnapshotRead": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v2_body.VmUpdate": {
            "type": "object",
            "properties": {
                "cpuCores": {
                    "type": "integer",
                    "minimum": 1
                },
                "name": {
                    "description": "Name is used to rename a VM.\nIf specified, only name will be updated.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "ownerId": {
                    "description": "OwnerID is used to initiate transfer a VM to another user.\nIf specified, only the transfer will happen.\nIf specified but empty, the transfer will be canceled.",
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/go-deploy_dto_v2_body.PortUpdate"
                    }
                },
                "ram": {
                    "type": "integer",
                    "minimum": 1
                },
                "transferCode": {
                    "description": "TransferCode is used to accept transfer of a VM.\nIf specified, only the transfer will happen.",
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 1
                }
            }
        },
        "go-deploy_dto_v2_body.VmUpdated": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                }
            }
        },
        "sys.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sys.errorPiece"
                    }
                }
            }
        },
        "sys.errorPiece": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}