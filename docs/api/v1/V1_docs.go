// Package v1 Code generated by swaggo/swag. DO NOT EDIT
package v1

import "github.com/swaggo/swag"

const docTemplateV1 = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Support",
            "url": "https://github.com/kthcloud/go-deploy"
        },
        "license": {
            "name": "MIT License",
            "url": "https://github.com/kthcloud/go-deploy?tab=MIT-1-ov-file#readme"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/deployments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List deployments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployment"
                ],
                "summary": "List deployments",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "List all",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include shared",
                        "name": "shared",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.DeploymentRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployment"
                ],
                "summary": "Create deployment",
                "parameters": [
                    {
                        "description": "Deployment body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.DeploymentCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.DeploymentRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/deployments/{deploymentId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployment"
                ],
                "summary": "Get deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.DeploymentRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployment"
                ],
                "summary": "Update deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Deployment update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.DeploymentUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.DeploymentUpdated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployment"
                ],
                "summary": "Delete deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.DeploymentCreated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/deployments/{deploymentId}/ciConfig": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get CI config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployment"
                ],
                "summary": "Get CI config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.CiConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/deployments/{deploymentId}/command": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Do command",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployment"
                ],
                "summary": "Do command",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Command body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.DeploymentCommand"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/deployments/{deploymentId}/logs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get logs using Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployment"
                ],
                "summary": "Get logs using Server-Sent Events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/discover": {
            "get": {
                "description": "Discover",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discover"
                ],
                "summary": "Discover",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.DiscoverRead"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/hooks/harbor": {
            "post": {
                "description": "Handle Harbor hook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployment"
                ],
                "summary": "Handle Harbor hook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Basic auth token",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Harbor webhook body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.HarborWebhook"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/jobs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List jobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Job"
                ],
                "summary": "List jobs",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "List all",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.JobRead"
                            }
                        }
                    }
                }
            }
        },
        "/v1/jobs/{jobId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetJob job by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Job"
                ],
                "summary": "GetJob job by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.JobRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update job. Only allowed for admins.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Job"
                ],
                "summary": "Update job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.JobUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.JobRead"
                        }
                    }
                }
            }
        },
        "/v1/metrics": {
            "get": {
                "description": "Get metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/notifications": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "List notifications",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "List all notifications",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.NotificationRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/notifications/{notificationId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.NotificationRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Update notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notification update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.NotificationUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Delete notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/resourceMigrations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List resource migrations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ResourceMigration"
                ],
                "summary": "List resource migrations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.ResourceMigrationRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create resource migration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ResourceMigration"
                ],
                "summary": "Create resource migration",
                "parameters": [
                    {
                        "description": "Resource Migration Create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.ResourceMigrationCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.ResourceMigrationCreated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/resourceMigrations/{resourceMigrationId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get resource migration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ResourceMigration"
                ],
                "summary": "Get resource migration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Migration ID",
                        "name": "resourceMigrationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.ResourceMigrationRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update resource migration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ResourceMigration"
                ],
                "summary": "Update resource migration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Migration ID",
                        "name": "resourceMigrationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource Migration Update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.ResourceMigrationUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.ResourceMigrationUpdated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete resource migration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ResourceMigration"
                ],
                "summary": "Delete resource migration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Migration ID",
                        "name": "resourceMigrationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/status": {
            "get": {
                "description": "List of worker status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "List worker status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.WorkerStatusRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/storageManagers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get storage manager list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StorageManager"
                ],
                "summary": "Get storage manager list",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "List all",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.SmRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/storageManagers/{storageManagerId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete storage manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StorageManager"
                ],
                "summary": "Delete storage manager",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Storage manager ID",
                        "name": "storageManagerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.SmDeleted"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/teams": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List teams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "List teams",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "List all",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.TeamRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/body.BindingError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Create team",
                "parameters": [
                    {
                        "description": "Team",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.TeamCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.TeamRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/body.BindingError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/teams/{teamId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.TeamRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/body.BindingError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Update team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Team",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.TeamUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.TeamRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/body.BindingError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Delete team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/body.BindingError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "List all",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Discovery mode",
                        "name": "discover",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.UserRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/{userId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.UserRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.UserRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/{userId}/apiKeys": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create API key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "API key create body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.ApiKeyCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/body.ApiKeyCreated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/vms": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List VMs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "List VMs",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "List all",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/go-deploy_dto_v1_body.VmRead"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "Create VM",
                "parameters": [
                    {
                        "description": "VM body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v1_body.VmCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v1_body.VmCreated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/vms/gpus": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of GPUs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "Get list of GPUs",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Only show available GPUs",
                        "name": "available",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.GpuRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/vms/{vmId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "Get VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v1_body.VmRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "UpdateVM VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "UpdateVM VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VM update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v1_body.VmUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v1_body.VmUpdated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "DeleteVM VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "DeleteVM VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v1_body.VmDeleted"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/vms/{vmId}/command": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Do command",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "Do command",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Command body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/body.VmCommand"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/vms/{vmId}/snapshot/{snapshotId}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get snapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "Get snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Snapshot ID",
                        "name": "snapshotId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v1_body.VmSnapshotRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete snapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "Delete snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Snapshot ID",
                        "name": "snapshotId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v1_body.VmSnapshotRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/vms/{vmId}/snapshots": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List snapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "List snapshots",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/go-deploy_dto_v1_body.VmSnapshotRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create snapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VM"
                ],
                "summary": "Create snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-deploy_dto_v1_body.VmSnapshotRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/zones": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List zones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zone"
                ],
                "summary": "List zones",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/body.ZoneRead"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/sys.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "body.ApiKey": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "body.ApiKeyCreate": {
            "type": "object",
            "required": [
                "expiresAt",
                "name"
            ],
            "properties": {
                "expiresAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "body.ApiKeyCreated": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "body.BindingError": {
            "type": "object",
            "properties": {
                "validationErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "body.CiConfig": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "string"
                }
            }
        },
        "body.DeploymentCommand": {
            "type": "object",
            "required": [
                "command"
            ],
            "properties": {
                "command": {
                    "type": "string",
                    "enum": [
                        "restart"
                    ]
                }
            }
        },
        "body.DeploymentCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "args": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "type": "string"
                    }
                },
                "customDomain": {
                    "description": "CustomDomain is the domain that the deployment will be available on.\nThe max length is set to 243 to allow for a sub domain when confirming the domain.",
                    "type": "string"
                },
                "envs": {
                    "type": "array",
                    "maxItems": 1000,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/body.Env"
                    }
                },
                "healthCheckPath": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 0
                },
                "image": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 1
                },
                "initCommands": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "private": {
                    "type": "boolean"
                },
                "replicas": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "volumes": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/body.Volume"
                    }
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "body.DeploymentCreated": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                }
            }
        },
        "body.DeploymentRead": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "customDomain": {
                    "type": "string"
                },
                "customDomainSecret": {
                    "type": "string"
                },
                "customDomainStatus": {
                    "type": "string"
                },
                "customDomainUrl": {
                    "type": "string"
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/body.Env"
                    }
                },
                "error": {
                    "type": "string"
                },
                "healthCheckPath": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "initCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "integrations": {
                    "description": "Integrations are currently not used, but could be used if we wanted to add a list of integrations to the deployment\n\nFor example GitHub",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "internalPort": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "pingResult": {
                    "type": "integer"
                },
                "private": {
                    "type": "boolean"
                },
                "repairedAt": {
                    "type": "string"
                },
                "replicas": {
                    "type": "integer"
                },
                "restartedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "storageUrl": {
                    "type": "string"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/body.Volume"
                    }
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "body.DeploymentUpdate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "args": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "type": "string"
                    }
                },
                "customDomain": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 0
                },
                "envs": {
                    "type": "array",
                    "maxItems": 1000,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/body.Env"
                    }
                },
                "healthCheckPath": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 0
                },
                "image": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 1
                },
                "initCommands": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "update",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "private": {
                    "type": "boolean"
                },
                "replicas": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "volumes": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/body.Volume"
                    }
                }
            }
        },
        "body.DeploymentUpdated": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                }
            }
        },
        "body.DiscoverRead": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/body.Role"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "body.Env": {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "value": {
                    "type": "string",
                    "maxLength": 10000,
                    "minLength": 1
                }
            }
        },
        "body.GpuRead": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "lease": {
                    "$ref": "#/definitions/body.Lease"
                },
                "name": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "body.HarborWebhook": {
            "type": "object",
            "properties": {
                "event_data": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "object",
                            "properties": {
                                "date_created": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "namespace": {
                                    "type": "string"
                                },
                                "repo_full_name": {
                                    "type": "string"
                                },
                                "repo_type": {
                                    "type": "string"
                                }
                            }
                        },
                        "resources": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "digest": {
                                        "type": "string"
                                    },
                                    "resource_url": {
                                        "type": "string"
                                    },
                                    "tag": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "occur_at": {
                    "type": "integer"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "body.JobRead": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastError": {
                    "type": "string"
                },
                "lastRunAt": {
                    "type": "string"
                },
                "runAfter": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "body.JobUpdate": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "running",
                        "failed",
                        "terminated",
                        "finished",
                        "completed"
                    ]
                }
            }
        },
        "body.Lease": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "string"
                },
                "expired": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                },
                "vmId": {
                    "type": "string"
                }
            }
        },
        "body.NotificationRead": {
            "type": "object",
            "properties": {
                "completedAt": {
                    "type": "string"
                },
                "content": {
                    "type": "object",
                    "additionalProperties": true
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "readAt": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "body.NotificationUpdate": {
            "type": "object",
            "properties": {
                "read": {
                    "type": "boolean"
                }
            }
        },
        "body.PublicKey": {
            "type": "object",
            "required": [
                "key",
                "name"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                }
            }
        },
        "body.Quota": {
            "type": "object",
            "properties": {
                "cpuCores": {
                    "type": "integer"
                },
                "deployments": {
                    "type": "integer"
                },
                "diskSize": {
                    "type": "integer"
                },
                "gpuLeaseDuration": {
                    "description": "in hours",
                    "type": "number"
                },
                "ram": {
                    "type": "integer"
                },
                "snapshots": {
                    "type": "integer"
                }
            }
        },
        "body.ResourceMigrationCreate": {
            "type": "object",
            "required": [
                "resourceID",
                "type"
            ],
            "properties": {
                "resourceID": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updateOwner": {
                    "type": "object",
                    "required": [
                        "ownerId"
                    ],
                    "properties": {
                        "ownerId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "body.ResourceMigrationCreated": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "description": "JobID is the ID of the job that was created for the resource migration.\nOnly if the migration was created with status 'accepted' a job will be created.",
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updateOwner": {
                    "type": "object",
                    "properties": {
                        "ownerId": {
                            "type": "string"
                        }
                    }
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "body.ResourceMigrationRead": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updateOwner": {
                    "type": "object",
                    "properties": {
                        "ownerId": {
                            "type": "string"
                        }
                    }
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "body.ResourceMigrationUpdate": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "body.ResourceMigrationUpdated": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "description": "JobID is the ID of the job that was created for the resource migration.\nOnly if the migration was updated with status 'accepted' a job will be created.",
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updateOwner": {
                    "type": "object",
                    "properties": {
                        "ownerId": {
                            "type": "string"
                        }
                    }
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "body.Role": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "quota": {
                    "$ref": "#/definitions/body.Quota"
                }
            }
        },
        "body.SmDeleted": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                }
            }
        },
        "body.SmRead": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "body.TeamCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "members": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/body.TeamMemberCreate"
                    }
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "resources": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "body.TeamMember": {
            "type": "object",
            "properties": {
                "addedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "gravatarUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "joinedAt": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "memberStatus": {
                    "type": "string"
                },
                "teamRole": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "body.TeamMemberCreate": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "teamRole": {
                    "description": "default to MemberRoleAdmin right now",
                    "type": "string"
                }
            }
        },
        "body.TeamMemberUpdate": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "teamRole": {
                    "description": "default to MemberRoleAdmin right now",
                    "type": "string"
                }
            }
        },
        "body.TeamRead": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/body.TeamMember"
                    }
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/body.TeamResource"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "body.TeamResource": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "body.TeamUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "members": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/body.TeamMemberUpdate"
                    }
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "resources": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "body.Usage": {
            "type": "object",
            "properties": {
                "cpuCores": {
                    "type": "integer"
                },
                "deployments": {
                    "type": "integer"
                },
                "diskSize": {
                    "type": "integer"
                },
                "ram": {
                    "type": "integer"
                },
                "snapshots": {
                    "type": "integer"
                }
            }
        },
        "body.UserData": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "value": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "body.UserRead": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "apiKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/body.ApiKey"
                    }
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "gravatarUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "publicKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/body.PublicKey"
                    }
                },
                "quota": {
                    "$ref": "#/definitions/body.Quota"
                },
                "role": {
                    "$ref": "#/definitions/body.Role"
                },
                "storageUrl": {
                    "type": "string"
                },
                "usage": {
                    "$ref": "#/definitions/body.Usage"
                },
                "userData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/body.UserData"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "body.UserUpdate": {
            "type": "object",
            "properties": {
                "apiKeys": {
                    "description": "ApiKeys specifies the API keys that should remain. If an API key is not in this list, it will be deleted.\nHowever, API keys cannot be created, use /apiKeys endpoint to create new API keys.",
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/body.ApiKey"
                    }
                },
                "publicKeys": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/body.PublicKey"
                    }
                },
                "userData": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/body.UserData"
                    }
                }
            }
        },
        "body.VmCommand": {
            "type": "object",
            "required": [
                "command"
            ],
            "properties": {
                "command": {
                    "type": "string",
                    "enum": [
                        "start",
                        "stop",
                        "reboot"
                    ]
                }
            }
        },
        "body.Volume": {
            "type": "object",
            "required": [
                "appPath",
                "name",
                "serverPath"
            ],
            "properties": {
                "appPath": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "serverPath": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "body.WorkerStatusRead": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "reportedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "body.ZoneEndpoints": {
            "type": "object",
            "properties": {
                "deployment": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "vm": {
                    "type": "string"
                },
                "vmApp": {
                    "type": "string"
                }
            }
        },
        "body.ZoneRead": {
            "type": "object",
            "properties": {
                "capabilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "endpoints": {
                    "$ref": "#/definitions/body.ZoneEndpoints"
                },
                "interface": {
                    "description": "Interface\nDeprecated: use Endpoints instead",
                    "type": "string"
                },
                "legacy": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "description": "Type\nDeprecated: use Capabilities instead",
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v1_body.HttpProxyCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "customDomain": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                }
            }
        },
        "go-deploy_dto_v1_body.HttpProxyRead": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "customDomain": {
                    "type": "string"
                },
                "customDomainSecret": {
                    "type": "string"
                },
                "customDomainStatus": {
                    "type": "string"
                },
                "customDomainUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v1_body.HttpProxyUpdate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "customDomain": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                }
            }
        },
        "go-deploy_dto_v1_body.PortCreate": {
            "type": "object",
            "required": [
                "name",
                "port",
                "protocol"
            ],
            "properties": {
                "httpProxy": {
                    "$ref": "#/definitions/go-deploy_dto_v1_body.HttpProxyCreate"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "tcp",
                        "udp"
                    ]
                }
            }
        },
        "go-deploy_dto_v1_body.PortRead": {
            "type": "object",
            "properties": {
                "externalPort": {
                    "type": "integer"
                },
                "httpProxy": {
                    "$ref": "#/definitions/go-deploy_dto_v1_body.HttpProxyRead"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v1_body.PortUpdate": {
            "type": "object",
            "required": [
                "name",
                "port",
                "protocol"
            ],
            "properties": {
                "httpProxy": {
                    "$ref": "#/definitions/go-deploy_dto_v1_body.HttpProxyUpdate"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "tcp",
                        "udp"
                    ]
                }
            }
        },
        "go-deploy_dto_v1_body.Specs": {
            "type": "object",
            "properties": {
                "cpuCores": {
                    "type": "integer"
                },
                "diskSize": {
                    "type": "integer"
                },
                "ram": {
                    "type": "integer"
                }
            }
        },
        "go-deploy_dto_v1_body.VmCreate": {
            "type": "object",
            "required": [
                "cpuCores",
                "diskSize",
                "name",
                "ram",
                "sshPublicKey"
            ],
            "properties": {
                "cpuCores": {
                    "type": "integer",
                    "minimum": 2
                },
                "diskSize": {
                    "type": "integer",
                    "minimum": 20
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "ports": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/go-deploy_dto_v1_body.PortCreate"
                    }
                },
                "ram": {
                    "type": "integer",
                    "minimum": 1
                },
                "sshPublicKey": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v1_body.VmCreated": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v1_body.VmDeleted": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v1_body.VmGpuLease": {
            "type": "object",
            "properties": {
                "expired": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "leaseEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v1_body.VmRead": {
            "type": "object",
            "properties": {
                "connectionString": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "gpu": {
                    "$ref": "#/definitions/go-deploy_dto_v1_body.VmGpuLease"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/go-deploy_dto_v1_body.PortRead"
                    }
                },
                "repairedAt": {
                    "type": "string"
                },
                "specs": {
                    "$ref": "#/definitions/go-deploy_dto_v1_body.Specs"
                },
                "sshPublicKey": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v1_body.VmSnapshotRead": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "current": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "parentName": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "vmId": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v1_body.VmUpdate": {
            "type": "object",
            "properties": {
                "cpuCores": {
                    "type": "integer",
                    "minimum": 1
                },
                "gpuId": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 0
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "noLeaseEnd": {
                    "type": "boolean"
                },
                "ports": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/go-deploy_dto_v1_body.PortUpdate"
                    }
                },
                "ram": {
                    "type": "integer",
                    "minimum": 1
                },
                "snapshotId": {
                    "type": "string"
                }
            }
        },
        "go-deploy_dto_v1_body.VmUpdated": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                }
            }
        },
        "sys.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "sys.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sys.Error"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-Api-Key",
            "in": "header"
        }
    }
}`

// SwaggerInfoV1 holds exported Swagger Info so clients can modify it
var SwaggerInfoV1 = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "go-deploy API",
	Description:      "This is the API explorer for the go-deploy API. You can use it as a reference for the API endpoints.",
	InfoInstanceName: "V1",
	SwaggerTemplate:  docTemplateV1,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfoV1.InstanceName(), SwaggerInfoV1)
}
